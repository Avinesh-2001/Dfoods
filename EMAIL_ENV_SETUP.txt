# EMAIL NOTIFICATION SYSTEM SETUP
# =================================

# Add these environment variables to your .env file in the backend folder:

# EMAIL CONFIGURATION
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password
FRONTEND_URL=http://localhost:3000

# GMAIL SETUP INSTRUCTIONS:
# =========================
# 1. Go to your Google Account settings
# 2. Enable 2-Factor Authentication
# 3. Generate an App Password:
#    - Go to Google Account > Security > 2-Step Verification
#    - Scroll down to "App passwords"
#    - Select "Mail" and "Other (Custom name)"
#    - Enter "Dfood App" as the name
#    - Copy the generated 16-character password
#    - Use this password as EMAIL_PASS in your .env file

# EXAMPLE .env FILE:
# ==================
# MONGODB_URI=mongodb://localhost:27017/dfood
# JWT_SECRET=your-jwt-secret
# PORT=5000
# FRONTEND_URL=http://localhost:3000
# EMAIL_USER=your-email@gmail.com
# EMAIL_PASS=your-16-character-app-password

# INITIALIZE EMAIL TEMPLATES:
# ===========================
# Run this command to set up default email templates:
# node scripts/initializeEmailTemplates.js

# EMAIL TEMPLATE VARIABLES:
# =========================
# Available variables for use in email templates:
# {{user_name}} - User's full name
# {{user_email}} - User's email address
# {{order_id}} - Order ID
# {{order_total}} - Order total amount
# {{order_items}} - List of order items
# {{tracking_number}} - Shipping tracking number
# {{discount_code}} - Discount code
# {{discount_amount}} - Discount amount
# {{estimated_delivery}} - Estimated delivery date
# {{delivery_date}} - Actual delivery date
# {{reset_link}} - Password reset link
# {{review_link}} - Link to leave review
# {{shop_link}} - Link to shop
# {{frontend_url}} - Frontend URL
# {{otp}} - OTP code

# EMAIL CATEGORIES:
# =================
# 1. Account / User Emails
#    - Create Account
#    - OTP Verification
#    - Welcome Email
#    - Forgot Password

# 2. Discount / Marketing Emails
#    - Discount Notification
#    - Greeting Shopping Again

# 3. Checkout / Order Emails
#    - Checkout Pending
#    - Payment Success
#    - Order Confirmation
#    - Order Invoice
#    - Order Edited
#    - Order Canceled

# 4. Shipping Emails
#    - Shipping Confirmation
#    - Pick Up Order
#    - Out for Delivery
#    - Delivered Order
#    - Shipping Updated

# 5. Payment Emails
#    - Payment Error
#    - Payment Success
#    - Payment Reminder

# 6. Return Emails
#    - Return Created
#    - Return Received
#    - Return Approved
#    - Return Declined

# TESTING EMAIL FUNCTIONALITY:
# ============================
# 1. Start your backend server: npm start
# 2. Start your frontend server: npm run dev
# 3. Go to Admin Dashboard > Email Notifications
# 4. Test OTP registration at /register
# 5. Check your email for OTP and welcome emails

# TROUBLESHOOTING:
# ================
# If emails are not sending:
# 1. Check EMAIL_USER and EMAIL_PASS in .env
# 2. Ensure 2FA is enabled on Gmail account
# 3. Use App Password, not regular password
# 4. Check console logs for error messages
# 5. Verify internet connection

# SUPPORT:
# ========
# For issues with email setup, check:
# - Gmail security settings
# - App password generation
# - Environment variables
# - Network connectivity




